plugins {
    id 'java'
    id 'maven'
}

group 'com.jfrog.xray.client'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://releases.jfrog.io/artifactory/oss-releases"
    }
    maven {
        url "https://releases.jfrog.io/artifactory/oss-snapshots"
        mavenContent {
            snapshotsOnly()
        }
    }
}

def buildInfoVersion = '2.38.1'
dependencies {
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-extractor', version: buildInfoVersion
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-client', version: buildInfoVersion
    implementation group: 'org.jfrog.buildinfo', name: 'build-info-api', version: buildInfoVersion
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.14.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.14.1'
    implementation(group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14') {
        exclude group: 'commons-codec', module: 'commons-codec'
    }
    implementation group: 'org.jfrog.filespecs', name: 'file-specs-java', version: '1.1.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.11'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.13'
    implementation group: 'commons-io', name: 'commons-io', version: '2.9.0'

    testImplementation group: 'org.mock-server', name: 'mockserver-netty', version: '5.11.2'
    testImplementation group: 'org.testng', name: 'testng', version: '7.4.0'
}

//noinspection GroovyAssignabilityCheck
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
}

//noinspection GroovyAssignabilityCheck
task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

//noinspection GroovyAssignabilityCheck
task testResultsZip(type: Zip) {
    archiveClassifier.set('testreports')
    from testReportDir
}

test {
    useTestNG()
    testLogging {
        exceptionFormat "full"
        events "started", "passed", "skipped", "failed", "standardOut", "standardError"
        minGranularity 0
    }
    // Have the XraySpecSuite run all tests
    exclude 'com/jfrog/xray/client/test/spec'
    finalizedBy(testResultsZip)
}

artifacts {
    archives sourcesJar
}

jar {
    manifest {
        attributes 'Implementation-Version': archiveVersion
    }
}
